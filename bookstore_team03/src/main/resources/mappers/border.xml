<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<!-- border.xml --> 

<mapper namespace="border"> 

	<!-- 기본배송지조회 -->
	<select id="deliveryAdd" parameterType="String" resultType="java.util.HashMap">
		SELECT deliv_no, member_id, deliv_postno, deliv_add1, deliv_add2, deliv_defaltadd
		FROM itwill.deliveryadd
		WHERE member_id = #{s_id} AND deliv_defaltadd = 1
	</select>
	
	<!-- 카트주문시 카트조회 -->
	<select id="cart" parameterType="String" resultType="java.util.HashMap">
		SELECT cart_no, c.isbn, book_name, book_price, book_imgoriname, book_imgpath, book_imgsize, cart_qty, book_imgname
        FROM (cart c JOIN book b 
        	  ON c.isbn=b.isbn)
        WHERE member_id = #{s_id}
        ORDER BY cart_date
	</select>
	
	<!-- 직접주문시 책정보조회 -->
	<select id="directborder" parameterType="String" resultType="java.util.HashMap" >
		SELECT isbn, book_name, book_price, book_imgoriname, book_imgpath, book_imgsize, book_imgname
		FROM itwill.book
		WHERE isbn = #{isbn}
	</select>
	
	<!-- 보유포인트조회 -->
	<select id="havepoint" parameterType="String" resultType="int">
	select nvl(havepoint,0) from (
		SELECT sum(point_change) havepoint
		FROM itwill.point
		WHERE member_id = #{s_id}
		)a
	</select>
	
	<!-- 총도서액조회 -->
	<select id="border_price" parameterType="String" resultType="int">
		SELECT sum(book_price*cart_qty)
		FROM (
			  SELECT c.isbn, book_price, cart_qty, member_id
			  FROM (cart c JOIN book b 
			  ON c.isbn=b.isbn)
			  ) AA
		WHERE AA.member_id =#{s_id}
	</select>

	<!-- 주문번호생성위한중복조회 -->
	<select id="dateno" parameterType="String" resultType="String">
		SELECT COUNT(border_no)
		FROM border
		WHERE border_no like #{border_date}||'%'
	</select>
	
	<!-- 장바구니구매: 주문서테이블행추가 -->
	<insert id="insert" parameterType="kr.co.itwill.border.BorderDTO">		
		INSERT INTO border(border_no, member_id, border_name, border_phone, border_price, border_date, border_msg, border_usepoint, border_postno, border_add1, border_add2)
		VALUES(#{border_no},#{member_id},#{border_name},#{border_phone},#{border_price},current_timestamp(), #{border_msg}, #{border_usepoint}, #{border_postno}, #{border_add1}, #{border_add2});
	</insert>
	
	
	<!-- 직접구매: 주문상세행추가 -->
	<insert id="directorderlistInsert" parameterType="java.util.HashMap">
		INSERT INTO itwill.orderlist(isbn, border_no, orderlist_cnt)
		VALUES("${isbn}", "${border_no}", "${orderlist_cnt}")
	</insert>
	
	<!-- 장바구니 구매: 주문상세행추가 -->
	<insert id="orderlistinsert" parameterType="java.util.List">
		INSERT INTO itwill.orderlist(isbn, border_no, orderlist_cnt)
		VALUES
		<foreach collection="list" item="item" separator=" , ">
		("${item.isbn}", "${item.border_no}", "${item.orderlist_cnt}")
		</foreach>
	</insert>
	
	<!-- 카트비우기 -->
	<delete id="cartdelete" parameterType="String">
		DELETE FROM cart
		WHERE member_id=#{s_id}	
	</delete>
	
	
	<!-- 페이징관련 -->
	<!-- 페이징 총 페이지수 -->
	<select id="totalRecord" parameterType="String" resultType="int">
		SELECT COUNT(border_no) 
		FROM border
		WHERE member_id=#{s_id}
	</select>
	
	<!-- 페이징 주문내역조회 -->
	<select id="paginglist" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT b.border_no, member_id, border_price, border_date, pay_witdstate
		FROM 
		(itwill.border b join pay p on b.border_no = p.border_no)
		WHERE member_id=#{s_id}
		ORDER BY border_date DESC
		LIMIT #{end} OFFSET #{start}
	</select>
	
	<!-- 주문내역조회 -->
	<select id="borderlist" parameterType="String" resultType="kr.co.itwill.border.BorderDTO">
		SELECT border_no, member_id, border_price, border_date
		FROM itwill.border
		WHERE member_id=#{s_id}
		ORDER BY border_date
	</select>
	
	<!-- 주문상세조회 -->
	<select id="orderlistDetail" parameterType="String" resultType="java.util.HashMap">
		SELECT orderlist_no, o.isbn, border_no, orderlist_cnt, book_name, book_price, book_imgoriname, book_imgpath, book_imgsize, book_imgname
		FROM (orderlist o JOIN book b 
        	  ON o.isbn=b.isbn)
		WHERE border_no=#{border_no}
		ORDER BY orderlist_no
	</select>

	<select id="cancelPrice" parameterType="String" resultType="Integer">
		SELECT border_price
		FROM border
		WHERE border_no = #{border_no};
	</select>

	<update id="cancel" parameterType="java.util.Map">
		UPDATE pay
			SET pay_witddate = NOW(), pay_witdprice= #{cancelPrice}, pay_witdstate = 0
		WHERE border_no = #{border_no}
	</update>
	
</mapper>